function Notify(){let self=this;let showNotify=function(type,title,messages){const notifyPopups=$(document).find(".notify-popup");if(notifyPopups.length>0){notifyPopups.remove();}
$("body").after('<div class="notify-popup '+type+'">'+
'    <div class="back" onclick="$(this).closest(\'.notify-popup\').remove()"></div>'+
'    <div class="front">'+
'        <div class="bg-side"></div>'+
'        <div class="close" onclick="$(this).closest(\'.notify-popup\').remove()"></div>'+
'        <div class="title">'+title+'</div>'+
'        <div class="notify-messages">'+messages+'</div>'+
'    </div>'+
'</div>');$(".notify-popup .title").html(title);$(".notify-popup .notify-messages").html(messages);$(".notify-popup").removeClass("hidden");};let messagesToList=function(messages){let messagesList="";$.each(messages,function(i,message){messagesList+="<div class='notify-message'>"+message+"</div>";});return messagesList;};self.showError=function(title,messages){const messagesList=messagesToList(messages);showNotify("error",title,messagesList);};self.showSuccess=function(title,messages){const messagesList=messagesToList(messages);showNotify("success",title,messagesList);};self.setCorrect=function(field){field.parent().find('.error-message').css('display','none');field.addClass("no-error");field.removeClass("has-error");};self.setInvalid=function(field){field.parent().find('.error-message').css('display','block');field.removeClass("no-error");field.addClass("has-error");return field.data("error-message");};$(document).keyup(function(event){if(event.key==="Escape"){let notifyPopup=$(".notify-popup");if(notifyPopup!==undefined){notifyPopup.remove();}}});}
function FormNotify(){this.show=function(messages){let liMessages="";$(messages).each(function(i,message){liMessages+="<li>"+message+"</li>";});if(liMessages!==""){const alertWarning=$(".alert--warning");const alertWarningUl=$(".alert--warning ul");alertWarningUl.html(liMessages);alertWarning.removeAttr("hidden");}};}
function ProductPreload(){const self=this;const MIN_TIMEOUT=1000;const SHOWING_TIME=100;self.init=function(callback){const loadingWrapper=$(".popup-loading-wrapper");if(loadingWrapper.length===0){callback();return false;}
loadingWrapper.fadeIn(SHOWING_TIME);window.setTimeout(function(){callback();},MIN_TIMEOUT);};self.stop=function(){const loadingWrapper=$(".popup-loading-wrapper");if(loadingWrapper.length>0){loadingWrapper.fadeOut(SHOWING_TIME);}};}
function FormControl(){let self=this;let notify=new Notify();self.notEmptyText=function(text){return text.length>=0;};self.isName=function(name){let onlyLetters=name.replace(/[^a-zA-Z]/g,'');let regex=/^[a-zA-Z\s]{2,}$/;return onlyLetters.length>=2&&regex.test(name);};self.isEmail=function(email){let regex=/^([a-zA-Z0-9_.+-])+@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;return regex.test(email);};self.isPhone=function(phone){let digits=phone.replace(/\D+/g,'');return(digits.length>=6);};self.checkBankCardSupported=function(bankCardField,alertField){let notSupportedCards=['414720','426684','414740','483312','442756','438854','464018','426690','441103','406042','475055','461046','424631','441712','412138',];let cardNumberWithSpaces=bankCardField.val();let cardNumber=cardNumberWithSpaces.replace(/\D+/g,'');let cardNumber6d=cardNumber.substr(0,6);let isSupported=true;$(notSupportedCards).each(function(i,notSupportedCard){if(notSupportedCard===cardNumber6d){isSupported=false;return false;}});if(isSupported===false){bankCardField.removeClass('no-error').addClass('has-error');alertField.stop().fadeIn();}else{bankCardField.removeClass('has-error').addClass('no-error');alertField.stop().fadeOut();}
return isSupported;};self.validate=function(items,validateFields){let errorMessages=[];let errorCount=0;$.each(items,function(i,item){let field=$(item);let name=field.attr("name");let value=field.val();let errorMessage="";let validateField=validateFields[name];if(validateField.name==="isName"){if(self.isName(value)){notify.setCorrect(field);}else{errorMessage=notify.setInvalid(field);}}else if(validateField.name==="isEmail"){if(self.isEmail(value)){notify.setCorrect(field);}else{errorMessage=notify.setInvalid(field);}}else if(validateField.name==="isPhone"){if(self.isPhone(value)){notify.setCorrect(field);}else{errorMessage=notify.setInvalid(field);}}else if(validateField.name==="notEmptyText"){if(value.length>0){notify.setCorrect(field);}else{errorMessage=notify.setInvalid(field);}}else if(validateField.name==="isChecked"){if(field.prop('checked')===true){notify.setCorrect(field);}else{errorMessage=notify.setInvalid(field);}}else if(validateField.name==="isLength"){if(validateField.type==="only-numbers"){value=value.replace(/\D+/g,'');}
let size=validateField.size;let sizes=size;if($.isArray(size)===false){sizes=[size];}
let correctSize=false;$(sizes).each(function(i,size){if(value.length===size){correctSize=true;return true;}});if(correctSize===true){notify.setCorrect(field);}else{errorMessage=notify.setInvalid(field);}}
if(errorMessage!==""){errorMessages.push(errorMessage);errorCount++;}
if(errorCount>=5){return false;}});return errorMessages;};self.getFieldByName=function(fields,name){let fieldId;for(fieldId in fields){if(fields.hasOwnProperty(fieldId)){let field=$(fields[fieldId]);if(field.attr("name")===name){return field;}}}
return null;};self.formSerialize=function(form){let formElements=form.serializeArray();let indexed_array={};$.map(formElements,function(n){indexed_array[n['name']]=n['value'];});return indexed_array;};self.send=function(url,params,callback){jQuery.ajax({type:"POST",url:url,data:params,success:function(data){console.log(data);try{let result=JSON.parse(data);callback(result);}catch(e){callback(e.message);}}});};}
function CPAAnswer(){let self=this;const popup=new Popup();const formControl=new FormControl();const popupTryAgainPayment=$("#try-again-payment");const tapCardNumber=popupTryAgainPayment.find('[name=billing_card_number]');const tapExpiryMonth=popupTryAgainPayment.find('[name=billing_card_exp_month]');const tapExpiryYear=popupTryAgainPayment.find('[name=billing_card_exp_year]');const tapCvvCode=popupTryAgainPayment.find('[name=billing_card_cvv]');const markCardNumber=function(){tapCardNumber.removeClass("no-error").addClass("has-error");};const markExpiryMonth=function(){tapExpiryMonth.removeClass("no-error").addClass("has-error");};const markExpiryYear=function(){tapExpiryYear.removeClass("no-error").addClass("has-error");};const markCVV=function(){tapCvvCode.removeClass("no-error").addClass("has-error");};let fillTryAgainPayment=function(){let field_keys=['phone_number','email_address','shipping_first_name','shipping_last_name','shipping_address_1','shipping_address_2','shipping_city','shipping_state','shipping_zipcode','billing_first_name','billing_last_name','billing_address_1','billing_address_2','billing_city','billing_state','billing_zipcode','billing_card_number','billing_card_exp_month','billing_card_exp_year','billing_card_cvv',];let tryAgainPayment=$('#try-again-payment');let form=formControl.formSerialize($('#billing-form'));$(field_keys).each(function(i,key){tryAgainPayment.find('[name='+key+']').val(form[key]);});if(form['fitness_ebook']==='on'){tryAgainPayment.find('[name=fitness_ebook]').prop('checked',true);}else{tryAgainPayment.find('[name=fitness_ebook]').prop('checked',false);}
tryAgainPayment.addClass('active');};self.sendTryAgainPayment=function(){const tapForm=$("#tap_form");const requiredFields=tapForm.find('.form-control[required]');let validateFields=formFields.getValidateFields();let messages=formControl.validate(requiredFields,validateFields);if(messages.length>0){return false;}
let field_keys=['phone_number','email_address','shipping_first_name','shipping_last_name','shipping_address_1','shipping_address_2','shipping_city','shipping_state','shipping_zipcode','billing_first_name','billing_last_name','billing_address_1','billing_address_2','billing_city','billing_state','billing_zipcode','billing_card_number','billing_card_exp_month','billing_card_exp_year','billing_card_cvv',];let billingForm=$('#billing-form');let form=formControl.formSerialize($('#tap_form'));$(field_keys).each(function(i,key){billingForm.find('[name='+key+']').val(form[key]);});if(form['fitness_ebook']==='on'){billingForm.find('[name=fitness_ebook]').prop('checked',true);}else{billingForm.find('[name=fitness_ebook]').prop('checked',false);}
$('#try-again-payment').removeClass('active');createOrder();};let showTryAgainPayment=function(requiredFields,errorMessage){fillTryAgainPayment();popupTryAgainPayment.find(".second_title").html(errorMessage);popup.show("try-again-payment");};let thenCardBlockingByDeclines=function(requiredFields){markCardNumber();markExpiryMonth();markExpiryYear();markCVV();showTryAgainPayment(requiredFields,"This card is not accepted. Please try another card.");tapCardNumber.val('');tapExpiryMonth.val('');tapExpiryYear.val('');tapCvvCode.val('');};let thenCardDeclined=function(requiredFields){markCardNumber();markExpiryMonth();markExpiryYear();markCVV();showTryAgainPayment(requiredFields,"This card is not accepted. Please use a different card.");};let thenInsufficientFunds=function(requiredFields){markCardNumber();markExpiryMonth();markExpiryYear();markCVV();showTryAgainPayment(requiredFields,"Transaction Declined: Insufficient funds.");tapCardNumber.val('');tapExpiryMonth.val('');tapExpiryYear.val('');tapCvvCode.val('');};let thenPrepaidCredit=function(requiredFields){markCardNumber();markExpiryMonth();markExpiryYear();markCVV();showTryAgainPayment(requiredFields,"Transaction Declined: Prepaid Credit Cards Are Not Accepted");};let thenInvalidCardNumber=function(requiredFields){markCardNumber();showTryAgainPayment(requiredFields,"Invalid Credit Card Number");};let thenCardIsExpired=function(requiredFields){markExpiryMonth();markExpiryYear();showTryAgainPayment(requiredFields,"Card is expired");};let thenInvalidCVVCode=function(requiredFields){markCVV();showTryAgainPayment(requiredFields,"Invalid CVV2 code. Try a different cvv2 code please.");};self.notify=function(data){const resultMessage=data.resultMessage;const requiredFields=data.requiredFields;if(resultMessage.indexOf("Transaction Declined: Card Declined")!==-1){thenCardDeclined(requiredFields);}else if(resultMessage.indexOf("Transaction Declined: Prepaid Credit Cards Are Not Accepted")!==-1){thenPrepaidCredit(requiredFields);}else if(resultMessage.indexOf("Invalid Credit Card Number")!==-1){thenInvalidCardNumber(requiredFields);}else if(resultMessage.indexOf("Card is expired")!==-1){thenCardIsExpired(requiredFields);}else if(resultMessage.indexOf("Transaction Declined: Issuer Declined")!==-1){thenCardDeclined(requiredFields);}else if(resultMessage.indexOf("Transaction Declined: Insufficient funds")!==-1){thenInsufficientFunds(requiredFields);}else if(resultMessage.indexOf("Transaction Declined: Fraud Detected")!==-1){thenCardDeclined(requiredFields);}else if(resultMessage.indexOf("Transaction Declined: CVV2 Mismatch")!==-1){thenInvalidCVVCode(requiredFields);}else if(resultMessage.indexOf("This card has already declined. Please try a new card.")!==-1){thenCardDeclined(requiredFields);}else if(resultMessage.indexOf("Card blocking by declines")!==-1){thenCardBlockingByDeclines(requiredFields);}else{thenCardDeclined(requiredFields);}};}
function CountryStates(){const areas={"US":[["AL","Alabama"],["AL","Alabama"],["AK","Alaska"],["AZ","Arizona"],["AR","Arkansas"],["CA","California"],["CO","Colorado"],["CT","Connecticut"],["DE","Delaware"],["DC","District of Columbia"],["FL","Florida"],["GA","Georgia"],["HI","Hawaii"],["IL","Illinois"],["IN","Indiana"],["KS","Kansas"],["KY","Kentucky"],["LA","Louisiana"],["ME","Maine"],["MD","Maryland"],["MA","Massachusetts"],["MI","Michigan"],["MN","Minnesota"],["MS","Mississippi"],["MO","Missouri"],["MT","Montana"],["NE","Nebraska"],["NV","Nevada"],["NH","New Hampshire"],["NJ","New Jersey"],["NM","New Mexico"],["NY","New York"],["NC","North Carolina"],["ND","North Dakota"],["OH","Ohio"],["OK","Oklahoma"],["OR","Oregon"],["PA","Pennsylvania"],["RI","Rhode Island"],["SC","South Carolina"],["TN","Tennessee"],["TX","Texas"],["UT","Utah"],["VT","Vermont"],["VA","Virginia"],["WA","Washington"],["WV","West Virginia"],["WI","Wisconsin"],["WY","Wyoming"]],"CA":[["AB","Alberta"],["BC","British Columbia"],["MB","Manitoba"],["NB","New Brunswick"],["NL","Newfoundland and Labrador"],["NT","Northwest Territories"],["NS","Nova Scotia"],["NU","Nunavut"],["ON","Ontario"],["PE","Prince Edward Island"],["QC","Quebec"],["SK","Saskatchewan"],["YT","Yukon Territory"]]};this.getStatesInOptions=function(country){let states=areas.hasOwnProperty(country)?areas[country]:"";let statesOptions='<option value="" selected="selected">Select State</option>';$.each(states,function(i,state){statesOptions+='<option value="'+state[0]+'">'+state[1]+'</option>';});return statesOptions;};}
function FormFields(){let self=this;self.transitionFromPopupWindow=function(){return $(".shipping_address").is("visible")===false;};self.shippingNotLikeBilling=function(){return($("input[name='billingcheck']:checked").val()==="no");};self.getValidateFields=function(){return{"phone_number":{name:"isPhone"},"email_address":{name:"isEmail"},"shipping_first_name":{name:"isName"},"shipping_last_name":{name:"isName"},"shipping_address_1":{name:"notEmptyText"},"shipping_city":{name:"notEmptyText"},"shipping_state":{name:"notEmptyText"},"shipping_zipcode":{name:"isLength",type:"only-numbers",size:5},"billing_first_name":{name:"isName"},"billing_last_name":{name:"isName"},"billing_address_1":{name:"notEmptyText"},"billing_address_2":{name:"notEmptyText"},"billing_city":{name:"notEmptyText"},"billing_state":{name:"notEmptyText"},"billing_zipcode":{name:"isLength",type:"only-numbers",size:5},"billing_card_number":{name:"isLength",type:"only-numbers",size:[15,16]},"billing_card_exp_month":{name:"isLength",type:"only-numbers",size:2},"billing_card_exp_year":{name:"isLength",type:"only-numbers",size:2},"billing_card_cvv":{name:"isLength",type:"only-numbers",size:[3,4]},};};}
function CardBlockingByDeclines(){let self=this;const MAX_DECLINES=2;let getCardPrint=function(requiredFields){const cardNumber=formControl.getFieldByName(requiredFields,'billing_card_number').val();return $.md5(cardNumber);};self.getCountDeclineAttempts=function(requiredFields){const cardPrint=getCardPrint(requiredFields);let declineExists=localStorage.getItem(cardPrint);if(declineExists===null){return 0;}
return parseInt(declineExists);};self.countOfDeclinedAttempts=function(requiredFields){const cardPrint=getCardPrint(requiredFields);let declineCount=self.getCountDeclineAttempts(requiredFields);declineCount++;localStorage.setItem(cardPrint,declineCount.toString());return cardBlockingByDeclines.cardIsBlocking(requiredFields);};self.blockNow=function(requiredFields){const cardPrint=getCardPrint(requiredFields);localStorage.setItem(cardPrint,MAX_DECLINES.toString());return true;};self.cardIsBlocking=function(requiredFields){const cardPrint=getCardPrint(requiredFields);let declineCount=self.getCountDeclineAttempts(requiredFields);return declineCount>=MAX_DECLINES;};}